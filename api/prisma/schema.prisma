// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  username String  @unique @db.VarChar(32)
  email    String  @unique @db.VarChar(255)
  bio      String? @db.VarChar(255)

  timestamp DateTime @default(now())

  posts    Post[]
  comments Comment[]
}

model Post {
  id        Int      @id @default(autoincrement())
  user_id   String   @db.VarChar(255)
  title     String   @db.VarChar(255)
  body      String   @db.Text
  timestamp DateTime @default(now())

  user     User      @relation(fields: [user_id], references: [id])
  hashtags HashTag[] @relation("PostToHashTag")

  comments Comment[]
}

model Comment {
  id                Int      @id @default(autoincrement())
  user_id           String   @db.VarChar(255)
  post_id           Int
  parent_comment_id Int?
  content           String   @db.Text
  timestamp         DateTime @default(now())

  user          User     @relation(fields: [user_id], references: [id])
  post          Post     @relation(fields: [post_id], references: [id])
  parentComment Comment? @relation("CommentToComment", fields: [parent_comment_id], references: [id])

  comments Comment[] @relation("CommentToComment")
}

model PostVote {
  post_id   Int
  user_id   String
  vote_type String

  @@id([post_id, user_id])
  @@index([user_id])
}

model CommentVote {
  comment_id Int
  user_id    String
  vote_type  String

  @@id([comment_id, user_id])
  @@index([user_id])
}

model PostView {
  post_id Int
  user_id String

  @@id([post_id, user_id])
  @@index([user_id])
}

model HashTag {
  value String @id @db.VarChar(255)
  posts Post[] @relation("PostToHashTag")
}
